PHP文件：
	能够包含文本，HTML，CSS以及PHP代码
	PHP代码在服务器上运行，而结果一纯文本形式(HTML)返回浏览器
	PHP能够生成动态页面内容
	PHP能够创建、打开、读取、写入、删除以及关闭服务器上的文件
	PHP能够接收表单数据
	PHP能够发送并取回 cookies
	PHP能够添加、删除、修改数据库中的数据
	PHP能够限制用户访问网站中的某些页面
	PHP能够对数据进行加密

PHP语法：PHP脚本以<?php 开头，以 ?>结尾：
	echo内建函数：在网页上输出文本：echo "Hello World"
	PHP语句以分号结尾。关闭标签自动表明分号，因此代码块最后一句不必使用分号
	PHP注释：三种：//, #, /*.....*/
	PHP对大小写敏感性：
		所有用户定义的函数，类和关键词（if, echo等）对大小写不敏感
		所有变量对大小写敏感！！
PHP变量：
	变量以 $ 符号开头，其后是变量名称
	变量名称必须以字母或下划线开头，不能以数字开头，且只能包括这三种
	创建变量：变量会在首次为其赋值时被创建，不必告知变量数据类型
	PHP变量作用域：指变量能够被引用/使用的那部分脚本
		PHP可以在脚步任意位置对变量进行声明。
		3种不同的变量作用域：local（局部），global（全局），static（静态）
		在函数之外声明的变量拥有global作用域，只能在函数以外访问		
		在函数之内声明的变量拥有local作用域，只能在函数以内访问
		这样的设定真是醉了，函数外的变量竟然函数内部不能访问，PHP你真是傲娇啊
		global关键词：在函数外部定义的变量，在函数内部在该变量前加global关键字重新声明，便可在函数内部引用
		static关键词：
			通常，当函数执行完后，会删除所有局部变量。不过在首次声明局部变量是使用static关键词，则函数
			执行完后会保存此时该变量的信息，下次调用函数时使用的是此时的变量值。
			不过，static关键词变量仍然是局部变量，只能在函数内访问
PHP echo和print语句：
	echo-能够输出一个以上的字符串，不返回任何值
		<?php echo "一个语句", "两个语句"; ?>
	print-只能输出一个字符串，始终返回1，因此稍慢
	两个语句有无括号均可，同时也都能包含HTML标记
	输出字符串变量的时候，这样的变量可以打引号，也可以不打
PHP数据类型：字符串、整数、浮点数、逻辑、数组、对象、NULL
	var_dump()函数测试任意变量的数据类型和值
	字符串：可以使用单引号或双引号。包括HTML标记
	整数：十进制，十六进制(0x)，八进制(0)
	浮点数：小数或指数形式
		1.2e2 或1.2E2 两种指数形式都行
	逻辑值：true false  都是小写	
	数组：声明语法：
		$cars=array('volvo','bmw');
	对象：用class关键字先声明类，然后再对象类中定义数据类型，然后在类的实例中使用数据类型	
	NULL值：表示变量无值。NULL是数据类型NULL唯一可能的值	
		可表示变量是否为空，也可用于区分空字符串与控制数据库
		将值设置为NULL可将变量清空
PHP字符串函数：
	strlen(): 返回字符串长度，以字符计：strlen('sfe');
	strpos(): 用于检索字符串内制定的字符或文本。找到返回首个匹配字符位置，未找到则返回false。格式：
		strpos('hello world', 'orld');
		字符串首个字符位置为0
PHP常量：类似变量，但常量一旦定义就无法更改或撤销定义
	常量名称前没有 $ 符号，切自动全局
	设置常量用define()函数，其使用三个参数：
		1.首个参数定义常熟名称，需要引号
		2.第二个参数定义常熟的值
		3.可选参数规定常量名是否对大小写敏感，默认false敏感
			define("car", "QQ", true);
PHP运算符：
	取余：%
	赋值运算符可以简写：x += y
	字符串运算符：. => 'hello'.'world'
	递增递减运算符：++$x; $y--;
	比较运算符：
		=== 完全相等
		<>, != 不等于
		!== 完全不等
		逻辑运算符：and(&&), or(||), !, xor
	数组运算符：用于操作数组
		$x+$y：联合两个关联数组。键值相同时会忽略加号后面的这个值
		$x==$y：俩数组拥有相同键/值对时
		$x===$y：拥有相同键/值对，且顺序类型都相同，才返回true
		!=, <>, !==，跟前面的意义一样
PHP if...else
	if...elseif...else //跟C语言就这点区别
PHP switch：
	switch($x)
	{
		case 1:blabal;break;
		case 2:blabla:break;
		default:blabla;break;
	}  //写这个示例的目的无非是回顾一下C的语法罢了
PHP while, do...while, for：C的语法
PHP foreach:此循环只适用于数组，用于遍历数组中的每个键/值对
	foreach($array as $value){...} //每次循环，将$array数组当前元素的值赋给$value变量，这个变量名可随意指定
PHP函数：PHP用于超过1000个内建函数！！！
	function functionName($fname) {echo $fname;}  //用户自定义函数，函数名对大小写不敏感
	默认参数值：
		function setHeight($min=50){echo "the height is $min";} setHeight(); //使用函数的默认参数
		返回值：return
PHP数组：
	索引数组：带有数字索引的数组（0开始），就是跟C中的数组一样的数组。
		自动分配索引：$car = array('Bench', 'Cadillac');
		手动分配索引：$car[0] = 'Volvo'; $car[1] = 'bmw';
		数组长度可随时变化
		获取数组长度-count()函数。此函数可帮助遍历数组
		访问索引数组，可这样：car[0]，也可这样：car['0']，好随便。。。
	关联数组：带有指定键的数组：
		$age = array('peter'=>33,'Bob'=>45,'Alice'=>22);  //方法1
		$age['peter']=33;$age['bob']=45;  //方法2
		遍历关联数组：foreach
			foreach($age as $key=>$value){....}  //如果只分配了一个变量，则是元素的值，而不是键
	多维数组：先留个位置
	
PHP数组排序：
	sort() - rsort(): 以升序或降序对索引数组排序
		若用此函数对关联数组排序，则会将关联数组转化为索引数组，即其键会消失，变成数字索引
	asort() - arsort()：根据值(value)，以升序或降序对关联数组排序
	ksort() - krsort()：根据键(key)，以升序或降序对关联数组排序
		这四个函数就不能用在索引数组上了
PHP超全局变量：指在全部作用域中始终可用的那只变量
	PHP中许多预定义变量是超全局的，意味着它们在一个脚本的全部作用域中都可用。包括：
		$GLOBALS, $_SERVER, $_REQUEST, $_POST, $_GET, $_ENV, $_COOKIE, $_SESSION, $_FILES 
	$GLOBALS：引用全局作用域中可用的全部全局变量。使用方式：
		$GLOBALS[index]数组中存储了所有的全局变量，变量的名字就是数组的键：
	$_SERVER：保存关于报头，路劲和脚本位置的信息。一些最最重要的元素
		$_SERVER['PHP_SELF']-返回当前执行脚本的文件名
		$_SERVER['SERVER_ADDR']	返回当前运行脚本所在的服务器的 IP 地址
		$_SERVER['SERVER_NAME']	返回当前运行脚本所在的服务器的主机名
		$_SERVER['REMOTE_ADDR']	返回浏览当前页面的用户的 IP 地址
		还是详见http://www.w3school.com.cn/php/php_superglobals.asp吧
	$_REQUEST：用于收集HTML表单提交的数据
	$_POST：用于收集用post方法提交的HTML表单数据。也常用语传递变量？？
	$_GET：用于收集用get方法提交的HTML表单数据，也可收集URL中发送的数据

/**************************PHP表单*****************************/
PHP表单处理：就是关于$_GET和$_POST两个超全局变量的使用
	GET和POST方法都创建数组，此数组包含键/值对，键是表单控件的名称，值是来自用户的输入数据	
	$_GET是通过URL参数传递到当前脚本的变量数组
	$_POST是通过HTTP POST传递来的
	以及，合适用GET，合适用POST的老生长谈却又什么都没谈的问题
PHP表单验证：适当验证对于防范黑客和垃圾邮件和重要
	并不懂具体什么愿意的忠告：$_SERVER['PHP_SELF']能够被黑客利用，称为跨站点脚本(Cross-site scripting, XSS)
	可通过使用htmlspecialchars()函数避免这种攻击，虽说了具体是怎么避免的，但一时不懂
	但是要记住的是：提交一个表单时，要做下面两件事：
		使用trim()函数去除输入中首尾--记住，只是首尾--多余的空格，制表符和换行符
		使用stripslashes()函数删除用户输入数据中的反斜杠
	当然还有上面那条使用htmlspecialchars()函数，将这三条用在获得的每一个POST提交表单数据上，组成一个
	输入检查函数，有保障
		
/****************************PHP高级教程********************************/
PHP多维数组：包含一个或多个数组的数组
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	